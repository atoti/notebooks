import pandas


def optimize_price_index(initial_price_list: pandas.DataFrame) -> pandas.DataFrame:
    """
    This pricing function has been made very simple as the main purpose is to serve the use case example.
    In real life this would typically be replaced by a more flexible price optimization engine with several parameters,
    such as that of ActiveViam.

    Args:
        initial_price_list: The initial SellingPrice list

    Returns:
        A new SellingPrice list with an optimized price such that Driver and Independent products are more competitive while compensating the loss of margin this would have generated by increasing the price of Complementary products.
    """
    new_price_list = initial_price_list.copy()
    new_price_list.rename(columns={"SellingPrice.VALUE": "SellingPrice"}, inplace=True)
    new_price_list.loc[
        (new_price_list["Product Class"] == "Complementary"), "SellingPrice"
    ] = (new_price_list["SellingPrice"] * 1.085)
    new_price_list.loc[
        (new_price_list["Product Class"] == "Driver"), "SellingPrice"
    ] = (new_price_list["SellingPrice"] * 0.96)
    new_price_list.loc[
        (new_price_list["Product Class"] == "Independent"), "SellingPrice"
    ] = (new_price_list["SellingPrice"] * 0.96)

    return new_price_list[["ProductId", "SellingPrice"]].astype(
        {"ProductId": int, "SellingPrice": float}
    )
